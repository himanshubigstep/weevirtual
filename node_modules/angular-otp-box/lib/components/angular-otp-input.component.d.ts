import { OnInit, EventEmitter } from '@angular/core';
import { FormGroup, FormControl } from '@angular/forms';
import { KeysPipe } from '../pipes/keys.pipe';
import { Setting } from '../models/setting';
import * as ɵngcc0 from '@angular/core';
export declare class OtpInputComponent implements OnInit {
    private keysPipe;
    setting: Setting;
    onValueChange: EventEmitter<any>;
    CounterDirective: any;
    otpForm: FormGroup;
    inputControls: FormControl[];
    componentKey: string;
    counter: number;
    constructor(keysPipe: KeysPipe);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    private getControlName;
    isLeftArrow(e: any): boolean;
    isRightArrow(e: any): boolean;
    isBackspaceOrDelete(e: any): boolean;
    isKeyCode(e: any, targetCode: any): boolean;
    keyUp(e: any, inputIdx: number): void;
    appendKey(id: any): string;
    setSelected(eleId: any): void;
    isValidEntry(e: any): boolean;
    focusTo(eleId: any): void;
    rebuildValue(): void;
    onCounterChange(e: any): void;
    ressendOtp(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<OtpInputComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<OtpInputComponent, "otp", never, { "setting": "setting"; }, { "onValueChange": "onValueChange"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1vdHAtaW5wdXQuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImFuZ3VsYXItb3RwLWlucHV0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtR3JvdXAsIEZvcm1Db250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgS2V5c1BpcGUgfSBmcm9tICcuLi9waXBlcy9rZXlzLnBpcGUnO1xuaW1wb3J0IHsgU2V0dGluZyB9IGZyb20gJy4uL21vZGVscy9zZXR0aW5nJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE90cElucHV0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBwcml2YXRlIGtleXNQaXBlO1xuICAgIHNldHRpbmc6IFNldHRpbmc7XG4gICAgb25WYWx1ZUNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgQ291bnRlckRpcmVjdGl2ZTogYW55O1xuICAgIG90cEZvcm06IEZvcm1Hcm91cDtcbiAgICBpbnB1dENvbnRyb2xzOiBGb3JtQ29udHJvbFtdO1xuICAgIGNvbXBvbmVudEtleTogc3RyaW5nO1xuICAgIGNvdW50ZXI6IG51bWJlcjtcbiAgICBjb25zdHJ1Y3RvcihrZXlzUGlwZTogS2V5c1BpcGUpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBnZXRDb250cm9sTmFtZTtcbiAgICBpc0xlZnRBcnJvdyhlOiBhbnkpOiBib29sZWFuO1xuICAgIGlzUmlnaHRBcnJvdyhlOiBhbnkpOiBib29sZWFuO1xuICAgIGlzQmFja3NwYWNlT3JEZWxldGUoZTogYW55KTogYm9vbGVhbjtcbiAgICBpc0tleUNvZGUoZTogYW55LCB0YXJnZXRDb2RlOiBhbnkpOiBib29sZWFuO1xuICAgIGtleVVwKGU6IGFueSwgaW5wdXRJZHg6IG51bWJlcik6IHZvaWQ7XG4gICAgYXBwZW5kS2V5KGlkOiBhbnkpOiBzdHJpbmc7XG4gICAgc2V0U2VsZWN0ZWQoZWxlSWQ6IGFueSk6IHZvaWQ7XG4gICAgaXNWYWxpZEVudHJ5KGU6IGFueSk6IGJvb2xlYW47XG4gICAgZm9jdXNUbyhlbGVJZDogYW55KTogdm9pZDtcbiAgICByZWJ1aWxkVmFsdWUoKTogdm9pZDtcbiAgICBvbkNvdW50ZXJDaGFuZ2UoZTogYW55KTogdm9pZDtcbiAgICByZXNzZW5kT3RwKCk6IHZvaWQ7XG59XG4iXX0=